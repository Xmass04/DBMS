<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Surplus Food Saver</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
    }

    header {
      background: white;
      padding: 20px 30px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }

    h1 {
      color: #059669;
      font-size: 28px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .nav-buttons button {
      background: #10b981;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      cursor: pointer;
      margin-left: 10px;
      font-size: 14px;
      transition: background 0.3s;
    }

    .nav-buttons button:hover {
      background: #059669;
    }

    .nav-buttons button.secondary {
      background: #d1fae5;
      color: #059669;
    }

    .nav-buttons button.secondary:hover {
      background: #a7f3d0;
    }

    .content {
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .auth-form, .post-form {
      max-width: 400px;
      margin: 0 auto;
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      color: #374151;
      font-weight: 500;
    }

    input, textarea {
      width: 100%;
      padding: 12px;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      font-size: 14px;
      transition: border-color 0.3s;
    }

    input:focus, textarea:focus {
      outline: none;
      border-color: #10b981;
    }

    textarea {
      resize: vertical;
      min-height: 100px;
    }

    .btn-primary {
      width: 100%;
      background: #10b981;
      color: white;
      border: none;
      padding: 12px;
      border-radius: 8px;
      font-size: 16px;
      cursor: pointer;
      transition: background 0.3s;
    }

    .btn-primary:hover {
      background: #059669;
    }

    .switch-auth {
      text-align: center;
      margin-top: 15px;
      color: #6b7280;
    }

    .switch-auth a {
      color: #10b981;
      cursor: pointer;
      text-decoration: none;
    }

    .switch-auth a:hover {
      text-decoration: underline;
    }

    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .post-card {
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      padding: 20px;
      transition: transform 0.3s, box-shadow 0.3s;
      background: linear-gradient(to bottom, #ffffff 0%, #f0fdf4 100%);
    }

    .post-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 16px rgba(16, 185, 129, 0.2);
      border-color: #10b981;
    }

    .post-title {
      font-size: 20px;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 10px;
    }

    .post-price {
      font-size: 24px;
      font-weight: 700;
      color: #10b981;
      margin-bottom: 10px;
    }

    .post-description {
      color: #6b7280;
      margin-bottom: 10px;
      line-height: 1.5;
    }

    .post-meta {
      display: flex;
      justify-content: space-between;
      font-size: 12px;
      color: #9ca3af;
      margin-top: 15px;
      padding-top: 15px;
      border-top: 1px solid #e5e7eb;
    }

    .alert {
      padding: 12px 20px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
    }

    .alert-success {
      background: #d1fae5;
      color: #065f46;
      border: 1px solid #6ee7b7;
    }

    .alert-error {
      background: #fee2e2;
      color: #991b1b;
      border: 1px solid #fca5a5;
    }

    .hidden {
      display: none;
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .section-header h2 {
      color: #1f2937;
      font-size: 24px;
    }

    .user-info {
      background: #f0fdf4;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 30px;
      border: 2px solid #d1fae5;
    }

    .user-info h3 {
      color: #059669;
      margin-bottom: 5px;
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6b7280;
    }

    .empty-state svg {
      width: 80px;
      height: 80px;
      margin-bottom: 20px;
      opacity: 0.3;
    }

    .hero-text {
      text-align: center;
      margin-bottom: 30px;
      color: #059669;
    }

    .hero-text p {
      color: #6b7280;
      margin-top: 10px;
    }

    .badge {
      display: inline-block;
      background: #d1fae5;
      color: #059669;
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 600;
      margin-top: 8px;
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1>üçÉ Surplus Food Saver</h1>
      <div class="nav-buttons">
        <button id="homeBtn" class="hidden">Browse Food</button>
        <button id="profileBtn" class="hidden">My Listings</button>
        <button id="createPostBtn" class="hidden">Share Food</button>
        <button id="loginNavBtn">Login</button>
        <button id="logoutBtn" class="secondary hidden">Logout</button>
      </div>
    </header>

    <div class="content">
      <div id="alertContainer"></div>

      <!-- Login Form -->
      <div id="loginView" class="auth-form">
        <div class="hero-text">
          <h2>Save Food, Help Others</h2>
          <p>Connect with your community to reduce food waste</p>
        </div>
        <form id="loginForm">
          <div class="form-group">
            <label>Username</label>
            <input type="text" id="loginUsername" required>
          </div>
          <div class="form-group">
            <label>Password</label>
            <input type="password" id="loginPassword" required>
          </div>
          <button type="submit" class="btn-primary">Login</button>
        </form>
        <div class="switch-auth">
          Don't have an account? <a id="showRegister">Register</a>
        </div>
      </div>

      <!-- Register Form -->
      <div id="registerView" class="auth-form hidden">
        <div class="hero-text">
          <h2>Join the Movement</h2>
          <p>Help reduce food waste in your community</p>
        </div>
        <form id="registerForm">
          <div class="form-group">
            <label>Username</label>
            <input type="text" id="registerUsername" required>
          </div>
          <div class="form-group">
            <label>Password</label>
            <input type="password" id="registerPassword" required>
          </div>
          <button type="submit" class="btn-primary">Register</button>
        </form>
        <div class="switch-auth">
          Already have an account? <a id="showLogin">Login</a>
        </div>
      </div>

      <!-- Posts View -->
      <div id="postsView" class="hidden">
        <div class="section-header">
          <h2>üçΩÔ∏è Available Surplus Food</h2>
        </div>
        <div id="postsGrid" class="posts-grid"></div>
      </div>

      <!-- Create Post Form -->
      <div id="createPostView" class="post-form hidden">
        <h2 style="text-align: center; margin-bottom: 10px; color: #1f2937;">Share Surplus Food</h2>
        <p style="text-align: center; color: #6b7280; margin-bottom: 30px;">Help reduce waste by sharing your extra food</p>
        <form id="createPostForm">
          <div class="form-group">
            <label>Food Item</label>
            <input type="text" id="postTitle" placeholder="e.g., Fresh vegetables, Baked goods" required>
          </div>
          <div class="form-group">
            <label>Description</label>
            <textarea id="postDescription" placeholder="Describe the food, quantity, and any important details..." required></textarea>
          </div>
          <div class="form-group">
            <label>Price ($) - Optional for free items</label>
            <input type="number" id="postPrice" step="0.01" value="0" placeholder="0.00 for free">
          </div>
          <div class="form-group">
            <label>Pickup Location</label>
            <input type="text" id="postLocation" placeholder="Your area or neighborhood" required>
          </div>
          <button type="submit" class="btn-primary">Share Food</button>
        </form>
      </div>

      <!-- Profile View -->
      <div id="profileView" class="hidden">
        <div class="user-info">
          <h3 id="profileUsername"></h3>
          <p style="color: #6b7280;">Your Food Sharing History</p>
        </div>
        <div id="userPostsGrid" class="posts-grid"></div>
      </div>
    </div>
  </div>

  <script>
    let token = localStorage.getItem('token');
    const API_URL = '/api';

    // DOM Elements
    const loginView = document.getElementById('loginView');
    const registerView = document.getElementById('registerView');
    const postsView = document.getElementById('postsView');
    const createPostView = document.getElementById('createPostView');
    const profileView = document.getElementById('profileView');
    const alertContainer = document.getElementById('alertContainer');

    // Navigation Buttons
    const homeBtn = document.getElementById('homeBtn');
    const profileBtn = document.getElementById('profileBtn');
    const createPostBtn = document.getElementById('createPostBtn');
    const loginNavBtn = document.getElementById('loginNavBtn');
    const logoutBtn = document.getElementById('logoutBtn');

    // Show/Hide Views
    function showView(view) {
      [loginView, registerView, postsView, createPostView, profileView].forEach(v => v.classList.add('hidden'));
      view.classList.remove('hidden');
    }

    function updateNav() {
      if (token) {
        homeBtn.classList.remove('hidden');
        profileBtn.classList.remove('hidden');
        createPostBtn.classList.remove('hidden');
        logoutBtn.classList.remove('hidden');
        loginNavBtn.classList.add('hidden');
      } else {
        homeBtn.classList.add('hidden');
        profileBtn.classList.add('hidden');
        createPostBtn.classList.add('hidden');
        logoutBtn.classList.add('hidden');
        loginNavBtn.classList.remove('hidden');
      }
    }

    function showAlert(message, type = 'success') {
      alertContainer.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
      setTimeout(() => alertContainer.innerHTML = '', 3000);
    }

    // Auth
    document.getElementById('loginForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const username = document.getElementById('loginUsername').value;
      const password = document.getElementById('loginPassword').value;

      try {
        const res = await fetch(`${API_URL}/login`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ username, password })
        });
        const data = await res.json();
        
        if (res.ok) {
          token = data.token;
          localStorage.setItem('token', token);
          updateNav();
          loadPosts();
          showView(postsView);
          showAlert('Welcome back! Start saving food today! üçÉ');
        } else {
          showAlert(data.message, 'error');
        }
      } catch (err) {
        showAlert('Error logging in', 'error');
      }
    });

    document.getElementById('registerForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const username = document.getElementById('registerUsername').value;
      const password = document.getElementById('registerPassword').value;

      try {
        const res = await fetch(`${API_URL}/register`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ username, password })
        });
        const data = await res.json();
        
        if (res.ok) {
          showAlert('Account created! Please login to start saving food. üå±');
          showView(loginView);
        } else {
          showAlert(data.message, 'error');
        }
      } catch (err) {
        showAlert('Error registering', 'error');
      }
    });

    // Posts
    async function loadPosts() {
      try {
        const res = await fetch(`${API_URL}/posts`);
        const posts = await res.json();
        
        const grid = document.getElementById('postsGrid');
        if (posts.length === 0) {
          grid.innerHTML = '<div class="empty-state"><p>No surplus food available right now. Be the first to share!</p></div>';
        } else {
          grid.innerHTML = posts.map(post => {
            const isFree = post.price === 0 || post.price === 0.00;
            return `
            <div class="post-card">
              <div class="post-title">${post.title}</div>
              <div class="post-price">${isFree ? 'FREE' : '$' + post.price.toFixed(2)}</div>
              ${isFree ? '<span class="badge">FREE TO COLLECT</span>' : ''}
              <div class="post-description">${post.description}</div>
              <div style="color: #6b7280; font-size: 14px; margin-top: 10px;">üìç ${post.location}</div>
              <div class="post-meta">
                <span>Shared by ${post.username}</span>
                <span>${new Date(post.createdAt).toLocaleDateString()}</span>
              </div>
            </div>
          `}).join('');
        }
      } catch (err) {
        showAlert('Error loading posts', 'error');
      }
    }

    document.getElementById('createPostForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const title = document.getElementById('postTitle').value;
      const description = document.getElementById('postDescription').value;
      const price = document.getElementById('postPrice').value;
      const location = document.getElementById('postLocation').value;

      try {
        const res = await fetch(`${API_URL}/posts`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify({ title, description, price, location })
        });
        const data = await res.json();
        
        if (res.ok) {
          showAlert('Food shared successfully! Thank you for reducing waste! üåç');
          document.getElementById('createPostForm').reset();
          document.getElementById('postPrice').value = '0';
          loadPosts();
          showView(postsView);
        } else {
          showAlert(data.message, 'error');
        }
      } catch (err) {
        showAlert('Error creating post', 'error');
      }
    });

    async function loadProfile() {
      try {
        const res = await fetch(`${API_URL}/profile`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        const data = await res.json();
        
        document.getElementById('profileUsername').textContent = data.username;
        const grid = document.getElementById('userPostsGrid');
        
        if (data.posts.length === 0) {
          grid.innerHTML = '<div class="empty-state"><p>You haven\'t shared any food yet. Start making a difference!</p></div>';
        } else {
          grid.innerHTML = data.posts.map(post => {
            const isFree = post.price === 0 || post.price === 0.00;
            return `
            <div class="post-card">
              <div class="post-title">${post.title}</div>
              <div class="post-price">${isFree ? 'FREE' : '$' + post.price.toFixed(2)}</div>
              ${isFree ? '<span class="badge">FREE TO COLLECT</span>' : ''}
              <div class="post-description">${post.description}</div>
              <div style="color: #6b7280; font-size: 14px; margin-top: 10px;">üìç ${post.location}</div>
              <div class="post-meta">
                <span>${new Date(post.createdAt).toLocaleDateString()}</span>
              </div>
            </div>
          `}).join('');
        }
      } catch (err) {
        showAlert('Error loading profile', 'error');
      }
    }

    // Navigation
    homeBtn.addEventListener('click', () => {
      loadPosts();
      showView(postsView);
    });

    profileBtn.addEventListener('click', () => {
      loadProfile();
      showView(profileView);
    });

    createPostBtn.addEventListener('click', () => {
      showView(createPostView);
    });

    loginNavBtn.addEventListener('click', () => {
      showView(loginView);
    });

    logoutBtn.addEventListener('click', () => {
      token = null;
      localStorage.removeItem('token');
      updateNav();
      showView(loginView);
      showAlert('Logged out. Thank you for helping reduce food waste!');
    });

    document.getElementById('showRegister').addEventListener('click', () => {
      showView(registerView);
    });

    document.getElementById('showLogin').addEventListener('click', () => {
      showView(loginView);
    });

    // Initialize
    updateNav();
    if (token) {
      loadPosts();
      showView(postsView);
    } else {
      showView(loginView);
    }
  </script>
</body>
</html>